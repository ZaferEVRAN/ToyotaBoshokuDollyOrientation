<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOncekiSayfa.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>